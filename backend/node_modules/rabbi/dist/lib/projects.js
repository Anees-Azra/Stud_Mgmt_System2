"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createNewProject = void 0;
function createNewProject({ name }) {
    return __awaiter(this, void 0, void 0, function* () {
        console.log(`create new project named ${name}`);
        // if directory with name exists, exit with error message
        // create directory with name (templated)
        //   - project name
        // change into directory (templated)
        //   - project name
        // initialize git repository
        // create github repo with hub (templated)
        //   - github username
        //   - project name
        // copy package.json (templated)
        //   - project name
        //   - github username
        //   - github repo name
        //   - description
        // copy .circleci/config.yml (templated)
        //   - docker username
        //   - project name
        // copy Dockerfile
        //
        // copy README.md (templated)
        //   - project name
        //   - description
        // copy tsconfig.json
        // copy src/server (templated)
        //   - project name
        //   - description
        // copy devops/chef/cookbook (templated)
        //   - project name
        //   - docker username
    });
}
exports.createNewProject = createNewProject;
//# sourceMappingURL=projects.js.map